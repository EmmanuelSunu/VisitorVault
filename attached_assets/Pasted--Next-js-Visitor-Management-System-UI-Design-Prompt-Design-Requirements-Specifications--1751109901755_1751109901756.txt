# Next.js Visitor Management System - UI Design Prompt

## Design Requirements & Specifications

### 1. Design System Foundation

**Color Palette:**
- Primary: Modern blue (#2563eb) with hover states (#1d4ed8)
- Secondary: Professional gray (#6b7280) with variants (#374151, #9ca3af)
- Success: Clean green (#10b981) for approvals and check-ins
- Warning: Warm amber (#f59e0b) for pending states
- Error: Clear red (#ef4444) for rejections and alerts
- Background: Light gray (#f9fafb) with white (#ffffff) cards
- Text: Dark gray (#111827) for primary, medium gray (#6b7280) for secondary

**Typography:**
- Primary font: Inter or similar modern sans-serif
- Headings: Bold weights (600-700) with proper hierarchy
- Body text: Regular (400) and medium (500) weights
- Size scale: 12px, 14px, 16px, 18px, 20px, 24px, 32px, 48px

**Spacing & Layout:**
- Base unit: 4px (use multiples: 8px, 12px, 16px, 24px, 32px, 48px)
- Container max-width: 1200px with responsive breakpoints
- Card padding: 24px (mobile: 16px)
- Button padding: 12px 24px (small: 8px 16px)

### 2. Core UI Components

#### Navigation & Layout
- **Header**: Clean top navigation with logo, user avatar, and role-based menu
- **Sidebar**: Collapsible sidebar for dashboard navigation with icons
- **Breadcrumbs**: Clear navigation path for deep pages
- **Footer**: Minimal footer with essential links and copyright

#### Forms & Inputs
- **Input Fields**: Rounded corners (6px), subtle borders, focus states with blue accent
- **Buttons**: Solid primary buttons, outline secondary buttons, proper loading states
- **Dropdowns**: Clean select boxes with search functionality where needed
- **File Upload**: Drag-and-drop areas with progress indicators
- **Date Pickers**: Modern calendar interface with time selection

#### Data Display
- **Cards**: Subtle shadows, rounded corners (8px), hover effects
- **Tables**: Clean rows with alternating backgrounds, sortable headers
- **Status Badges**: Rounded pills with appropriate colors for each status
- **Progress Bars**: Smooth animations for multi-step processes
- **Statistics Cards**: Large numbers with trend indicators

### 3. Page-Specific UI Requirements

#### Visitor Registration Flow (`/visitor/register`)

**Step 1 - Personal Information:**
```
Layout: Centered card (max-width: 600px)
Elements:
- Welcome header with friendly messaging
- Form fields in logical groups:
  * Name fields (side-by-side on desktop)
  * Email with validation feedback
  * Phone number with country selector
  * Company field (optional)
- Purpose of visit: Large text area
- Visit details: Date/time picker, duration selector
- Host selection: Searchable dropdown
- Location selection: Visual cards with building images
- Progress indicator showing step 1/3
- "Next" button (disabled until form valid)
```

**Step 2 - Photo Capture:**
```
Layout: Centered card with camera preview
Elements:
- Clear instructions for photo requirements
- Webcam preview area (640x480 aspect ratio)
- Capture button with camera icon
- Preview of captured photo with retake option
- Privacy notice about photo usage
- Back/Continue navigation buttons
```

**Step 3 - Confirmation:**
```
Layout: Summary card with QR code
Elements:
- "Registration Complete" success message
- Visitor details summary
- Generated QR code (200x200px)
- Badge number prominently displayed
- Visit validity information
- Download QR code button
- Print badge button
- "Register Another Visitor" option
```

#### Host Dashboard (`/dashboard/host`)

**Layout Structure:**
```
Header: Welcome message with host name
Stats Row: 4 cards showing:
- Pending approvals (with orange indicator)
- Today's visitors (with green indicator)
- Currently checked in (with blue indicator)
- This week's total (with gray indicator)

Main Content Grid:
Left Column (60%):
- Pending Visitors List
  * Card-based layout for each visitor
  * Photo thumbnail, name, company
  * Visit purpose preview
  * Approve/Reject buttons
  * View details link

Right Column (40%):
- Today's Schedule
  * Timeline view of approved visits
  * Check-in/out status indicators
- Recent Activity Feed
  * Log of visitor actions
  * Timestamps and status changes
```

#### Reception Interface (`/dashboard/reception`)

**Layout Structure:**
```
Top Section: Live status banner
- Total visitors in building
- Any security alerts or notices

Main Grid (3 columns):
Column 1: QR Scanner
- Live camera feed
- Scan result display
- Manual entry fallback

Column 2: Visitor Check-in/out
- Search functionality
- Quick check-in buttons
- Visitor photo display
- Access level information

Column 3: Current Visitors
- Real-time list of checked-in visitors
- Time since check-in
- Host information
- Expected check-out time
- Emergency contact info
```

#### Admin Dashboard (`/dashboard/admin`)

**Layout Structure:**
```
Top Navigation: Tab-based interface
- Visitors Overview
- User Management
- Locations & Access
- Settings & Templates

Dashboard Grid:
- System statistics (4 cards)
- Activity charts (visitor trends)
- Recent actions log
- System health indicators

Data Tables:
- Sortable and filterable
- Bulk actions available
- Export functionality
- Pagination controls
```

### 4. Responsive Design Requirements

**Mobile-First Approach:**
- All layouts must work on 320px width minimum
- Touch-friendly button sizes (minimum 44px)
- Collapsible navigation for mobile
- Swipe gestures for photo capture
- Optimized forms for mobile keyboards

**Breakpoints:**
- Mobile: 320px - 768px
- Tablet: 768px - 1024px
- Desktop: 1024px+

**Mobile Optimizations:**
- Stack cards vertically
- Collapsible sidebar becomes bottom navigation
- Larger touch targets for buttons
- Simplified table views (card-based)
- Optimized camera interface for mobile

### 5. Interactive Elements & Animations

**Micro-interactions:**
- Button hover states with subtle color changes
- Loading spinners for form submissions
- Success animations for completed actions
- Smooth transitions between form steps
- Card hover effects with slight elevation

**Feedback Mechanisms:**
- Toast notifications for success/error messages
- Form validation with real-time feedback
- Loading states for all async operations
- Confirmation dialogs for destructive actions
- Progress indicators for multi-step processes

### 6. Accessibility Requirements

**WCAG 2.1 AA Compliance:**
- Color contrast ratios minimum 4.5:1
- Keyboard navigation for all interactive elements
- Screen reader compatibility with proper ARIA labels
- Focus indicators clearly visible
- Alternative text for images and icons

**Form Accessibility:**
- Labels properly associated with inputs
- Error messages clearly announced
- Fieldset grouping for related fields
- Required field indicators
- Descriptive placeholder text

### 7. Dark Mode Support

**Color Adaptations:**
- Background: #111827 (dark gray)
- Cards: #1f2937 (slightly lighter gray)
- Text: #f9fafb (light gray)
- Borders: #374151 (medium gray)
- Maintain accessibility contrast ratios

### 8. Photography & QR Code Guidelines

**Photo Requirements:**
- Minimum resolution: 400x400px
- Aspect ratio: 1:1 (square)
- File format: JPEG with 80% quality
- Background: Plain, preferably light colored
- Lighting: Even, no harsh shadows

**QR Code Standards:**
- Size: 200x200px for display, scalable for print
- Error correction: Medium level
- Quiet zone: 4 modules minimum
- High contrast (black on white)
- Include backup text/numbers below code

### 9. Print-Friendly Badge Design

**Badge Layout:**
- Standard size: 3.5" x 2.25" (credit card size)
- Visitor photo: 1" x 1" in top-left corner
- Company logo space in header
- Large, readable text for name and company
- QR code in bottom-right corner (0.75" x 0.75")
- Badge number prominently displayed
- Visit date and validity period
- Host name and contact info

### 10. Performance Considerations

**Loading Optimization:**
- Skeleton screens for loading states
- Lazy loading for images and heavy components
- Progressive image loading
- Minimize layout shifts during loading
- Optimized bundle sizes for faster load times

**Image Optimization:**
- WebP format with JPEG fallback
- Responsive image sizing
- Proper compression ratios
- CDN delivery for static assets
- Lazy loading for non-critical images